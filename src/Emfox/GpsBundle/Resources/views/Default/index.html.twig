<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>物流定位监控系统</title>
<link rel="stylesheet"
	href="{{ asset('bundles/emfoxgps/css/zTreeStyle/zTreeStyle.css') }}"
	type="text/css">
<style type="text/css">
html {
	height: 100%;
}

body {
	height: 100%;
	margin: 0px;
	padding: 0px;
}

#top {
	width: 100%;
	height: 79px;
	border-bottom: 1px solid #ccc;
	background: #eee;
}

#top_content {
	font-size: 30px;
	text-align: center;
}

#aside {
	position: absolute;
	top: 80px;
	width: 179px;
	border-right: 1px solid #bbb;
	background: #ddd;
	overflow-y: scroll;
}

#map {
	margin-left: 180px;
}
</style>
<script type="text/javascript"
	src="{{ asset('bundles/emfoxgps/js/jquery-1.4.4.min.js') }}"></script>
<script type="text/javascript"
	src="{{ asset('bundles/emfoxgps/js/jquery.cookie.js') }}"></script>
<script type="text/javascript"
	src="{{ asset('bundles/emfoxgps/js/jquery.ztree.all-3.5.min.js') }}"></script>
<script type="text/javascript"
	src="{{ asset('bundles/emfoxgps/js/coords_trans.js') }}"></script>
<script type="text/javascript"
	src="{{ asset('bundles/emfoxgps/js/proj4.js') }}"></script>
<script type="text/javascript"
	src="http://api.map.baidu.com/api?v=2.0&ak=vnqN3eXrBMk2YTtYZsWL1Qru"></script>
<script type="text/javascript"
	src="{{ asset('bundles/emfoxgps/js/socket.io.js') }}"></script>
<script type="text/javascript"
	src="{{ asset('bundles/emfoxgps/js/yunba-1.0.1.js') }}"></script>
</head>

<body onresize="checkSize()">
	<div id="top">
		<div id="top_content">物流定位监控系统</div>
	</div>
	<div id="main">
		<div id="aside">
			单位列表<input type="button" value="全局视图" id="viewAll" />
			<div id="jsonTree" class="ztree"></div>
			<div id="divSend">
				<textarea id="msgContent" rows="3" cols="18"></textarea>
				<input type="button" value="发送" id="sendMsg" />
				<input type="button" value="取消" id="abortMsg" />
			</div>
			<input type="button" value="发消息" id="showSend" />
			<div>
				<input type="radio" name="refresh_time" value="30">30秒自动刷新<br />
				<input type="radio" name="refresh_time" value="60">1分钟自动刷新<br />
				<input type="radio" name="refresh_time" value="120">2分钟自动刷新<br />
				<input type="radio" name="refresh_time" value="0" checked="checked">
				<input type="button" value="手动刷新" id="reloadAll" />
			</div>
			<div>
				直角坐标<input type="text" id="mouse_pos_gauss" /> GPS坐标<input
					type="text" id="mouse_pos_wgs84" />
			</div>
			<a href="{{ path("fos_user_security_logout") }}">注销当前用户</a>
		</div>
		<div id="map"></div>
	</div>
</body>
<script type="text/javascript">
var ztreeStatusCookieKey ='ztree-log-status-gps1s';
$.cookie.defaults.path = '/';
var zTreeObj;
//zTree 的参数配置
var zTreeSetting = { callback:{onClick:zTreeOnClick,onExpand:logStatus,onCollapse:logStatus},
		check:{enable:false,chkboxType:{ "Y" : "s", "N" : "" }},
		data:{key:{name:"title"} },
		view:{addDiyDom: addDiyDom} };
var zNodes;
var map;
var labelPos;
var nextRefresh;
var yunba;

$(document).ready(function(){
	checkSize();
	map = new BMap.Map("map",{mapType: BMAP_NORMAL_MAP});
	map.centerAndZoom(new BMap.Point(116.384, 39.925), 15);
	map.setDefaultCursor("default");
	map.addControl(new BMap.NavigationControl({type: BMAP_NAVIGATION_CONTROL_LARGE}));
	map.addControl(new BMap.MapTypeControl({mapTypes: [BMAP_NORMAL_MAP,BMAP_SATELLITE_MAP,BMAP_HYBRID_MAP]}));
    map.addEventListener("mousemove",function(e){
        p=bd2wgs(e.point);
        p.lng=Math.round(p.lng*1000000)/1000000;
        p.lat=Math.round(p.lat*1000000)/1000000;
        gauss = toGaussProj(p.lng,p.lat);
        var c = "直角坐标："+gauss.x+","+ gauss.y + "<br />GPS坐标：" + p.lng + "," + p.lat;
        labelPos.setContent(c);
        labelPos.setPosition(new BMap.Point(e.point.lng,e.point.lat));
    });
    map.addEventListener("click",function(e){
        p=bd2wgs(e.point);
        p.lng=Math.round(p.lng*1000000)/1000000;
        p.lat=Math.round(p.lat*1000000)/1000000;
        gauss = toGaussProj(p.lng,p.lat);
        $('#mouse_pos_gauss').val(gauss.x+","+gauss.y);
        $('#mouse_pos_wgs84').val(p.lng+","+p.lat);
    });
    map.addEventListener("mouseover",function(e){
		labelPos.show();
    });
    map.addEventListener("mouseout",function(e){
		labelPos.hide();
    });
    
    $('#reloadAll').click(reloadAll);
    $('#viewAll').click(function() {setCurLocation(zNodes);});
    $('input[name=refresh_time]').change(timedReload);
    $('#sendMsg').click(sendMsg);
    $('#abortMsg').click(hideSend);
    $('#showSend').click(showSend);
    $('#divSend').hide();
    reloadAll();

    yunba = new Yunba({server: 'sock.yunba.io', port: 3000, appkey: '53e491034e9f46851d5a573a'});
    yunba.init(function(success){
		if(success){
			console.log('你已连接上socket '+yunba.socket.socket.sessionid);
		}
	});

});

function toGaussProj(lng,lat){
	zone = Math.floor(lng/6)*6+3;
    proj4.defs('WGS84tm', '+proj=tmerc +lat_0=0 +lon_0='+zone+' +x_0=500000 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs');
    gauss = proj4('WGS84tm').forward({x:lng,y:lat});
    gauss.x = Math.round(gauss.x);
    gauss.y = Math.round(gauss.y);
    return gauss;
}
function showSend(){
	$('#divSend').show();
	$('#showSend').hide();
	zTreeSetting.check.enable = true;
	reloadzTree();
	yunba.connect(function(success,msg){
	    if(success){
	        console.log('你已成功连接到消息服务器');
	    }else{
	        console.log(msg);
	    }
	});
}
function hideSend(){
	$('#divSend').hide();
	$('#showSend').show();
	zTreeSetting.check.enable = false;
	reloadzTree();
}
function sendMsg()
{
	nodes = zTreeObj.getCheckedNodes(true);
	if (nodes.length == 0){
		alert("请先勾选发送单位");
		return 0;
	}
	var msg = $('#msgContent').val();
	if (msg == ""){
		alert("请先填写消息内容");
		return 0;
	}
	var topic;
    Object.keys(nodes).forEach(function(key) {
        topic = nodes[key].devid;
        if(topic != ""){
            
	        yunba.publish(
	        	    {topic:topic,msg:msg},
	        	    function(success){
	        	        if(success){
	        	        console.log('消息发布成功！');
	        	        }
	        	    }
	        	);
        }
    });
    hideSend();
}

function timedReload()
{
var interval = $("input[name=refresh_time]:checked").val();
clearInterval(nextRefresh);
if(interval > 0)
{
	nextRefresh=setInterval("reloadAll()",interval*1000);
}
}

function reloadAll(){
    $.get("{{ path('category_hierarchy') }}", function (data) {
        zNodes = $.parseJSON(data).ztree;
        reloadzTree();
        reloadOverlay();
	});
}
function reloadzTree(){
    zTreeObj = $.fn.zTree.init($("#jsonTree"), zTreeSetting, zNodes);
    var opennodes = ($.cookie(ztreeStatusCookieKey) && $.cookie(ztreeStatusCookieKey).split(',') )|| [];

	if(opennodes !== null && opennodes.length !== 0)
	{
		for ( i in opennodes){
			the_node = zTreeObj.getNodeByParam("id",opennodes[i])
			if(the_node)
				the_node.open = true;
		}
	}
	zTreeObj.refresh();
}

function reloadOverlay(){
    map.clearOverlays();
    var nodes = zTreeObj.transformToArray(zTreeObj.getNodes());
    Object.keys(nodes).forEach(function(key) {
        if(nodes[key].lat*nodes[key].lng !=0)
        	addMarker_p(nodes[key]);
    });
    opts = {
    		  offset   : new BMap.Size(12, -35)    //设置文本偏移量
    		}
  	labelPos = new BMap.Label("坐标：", opts);
    map.addOverlay(labelPos);
    labelPos.hide();
}
function checkSize() {
	var h = document.documentElement.clientHeight;
	document.getElementById('aside').style.height = h - 80 + "px";
	document.getElementById('map').style.height = h - 80 + "px";
	}

function addMarker_p(point){ //添加所有单位的当前点
    p = new BMap.Point(point.lng,point.lat);
    content = "<p>单位："+point.title+"</p><p>更新时间："+ point.updatetime.date+"</p>";
    var myIcon = new BMap.Icon("{{ asset('bundles/emfoxgps/images/Marker_Point.png') }}",
    	    new BMap.Size(32, 32), {anchor: new BMap.Size(16, 32)});
    var marker = new BMap.Marker(p, {icon: myIcon});  
    var infoWindow = new BMap.InfoWindow(content);   
    map.addOverlay(marker);  
    marker.addEventListener("click", function(){            
        this.openInfoWindow(infoWindow);  
    });
    opts = {
  		  position : p,    // 指定文本标注所在的地理位置
  		  offset   : new BMap.Size(10, -15)    //设置文本偏移量
  		}
	var label = new BMap.Label(point.title, opts);
	map.addOverlay(label);
    label.addEventListener("click", function(){            
        this.hide();  
    });
}
function addMarker_t(point){ //添加某一单位的历史点
    p = new BMap.Point(point.lng,point.lat);
    content = "<p>单位："+point.title+"</p><p>更新时间："+ point.time+"</p>";
    var myIcon = new BMap.Icon("{{ asset('bundles/emfoxgps/images/Marker_Pin.png') }}",
    	    new BMap.Size(32, 32), {anchor: new BMap.Size(16, 32)});
    var marker = new BMap.Marker(p, {icon: myIcon});    
    map.addOverlay(marker);  
    opts = {
    		  position : p,    // 指定文本标注所在的地理位置
    		  offset   : new BMap.Size(10, -5)    //设置文本偏移量
    		}
  	var label = new BMap.Label(new Date(point.time).toLocaleTimeString("en-US", {hour12: false}), opts);
  	map.addOverlay(label);
      label.addEventListener("click", function(){            
          this.hide();  
      });
}
function zTreeOnClick(event, treeId, treeNode) {
	//FIXME: 12377 is just a placeholder,
	//FIXME: Better to use FOSJsRoutingBundle for exporting Symfony Routes to Javascript.
    $.get("{{ path('trail_list',{'catid':12377}) }}".replace(/12377/,treeNode.id), function (data) {
        trail = $.parseJSON(data).trail;
        reloadOverlay();
        Object.keys(trail).forEach(function(key) {
            if(trail[key].lat*trail[key].lng !=0)
                trail[key].title=treeNode.title;
            	addMarker_t(trail[key]);
        });
	});
};
function addDiyDom(treeId, treeNode) {
	if (treeNode.children.length == 0) return;
	var aObj = $("#" + treeNode.tId + "_a");
	var editStr = "<input type='button' id='diyBtn_" + treeNode.id
		+ "' value='当前位置' onfocus='this.blur();' />";
	aObj.after(editStr);
	var btn = $("#diyBtn_"+treeNode.id);
	if (btn) btn.bind("click", function(){setCurLocation(treeNode)});
};
function setCurLocation(treeNode){
    var nodes = zTreeObj.transformToArray(treeNode);
    var bdpoints = new Array();
    Object.keys(nodes).forEach(function(key) {
        if(nodes[key].lat*nodes[key].lng !=0){
            p = new BMap.Point(nodes[key].lng,nodes[key].lat);
            bdpoints.push(p);
        }
    });
    if (bdpoints.length>0)
    	map.setViewport(bdpoints,{zoomFactor:-1});
}
function logStatus(event, treeId, treeNode)
{

	var _nodes = ($.cookie(ztreeStatusCookieKey) && $.cookie(ztreeStatusCookieKey).split(',') )|| [];
	var _index = $.inArray(treeNode.id + '', _nodes);

	if(treeNode.open && _index === -1)
	{
		_nodes.push(treeNode.id);
	}	
	else
	{
		_nodes.splice(_index, 1);
	}

	$.cookie(ztreeStatusCookieKey, _nodes.join(','));
}

</script>
</html>